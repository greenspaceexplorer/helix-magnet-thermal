	PROGRAM HELIXFIT
	IMPLICIT NONE 

C ROBERT J TARCHINSKI 1 JULY, 2016 UNVERSITY OF MICHIGAN
	
	REAL R,X,Y,Z,XO,YO,ZO,BX,BY,BZ,BR,B,R11,R12,R13,R21,R22,R23,R31,R32,R33,T,XM
	INTEGER UNITNUM,NUMCOLS
	REAL B_X, B_Y,BDATA(NUMROWS,NUMCOLS)
	COMMON/FIELDDATA/BDATA 
	COMMON/CHISQVALS/XM,XC
	COMMON/COORDS/TCOORD
	COMMON/DATADIMENSIONS/NUMROWS,NUMCOLS
	REAL :: BDATA(NUMROWS,NUMCOLS) 
	XM=0.1

C SET THE SIZE OF THE MATRIX: CAN RESIZE IN THE SUBROUTINE? 

C R ARE THE ROTATION COORDINATES 
C T/TMIN ARE THE ROTATION ANGLES 
C XM/XC ARE THE MINIMUM AND CURRENT CHI-SQUARE VALUES  

	PRINT 10
10	FORMAT (' HELIX MAGNETIC FIELD FITTING ROUTINE')
	BR=0.0
	BX=0.0	
	B=0.0 
	CALL READBDATA
20	CALL CHI_SQUARE(NUMROWS)

			
C FACTOR OF 3.016 CONVERTS THE GAUSSMETER GRID COORDINATES TO CM FROM ORIGIN 
C (6,6,34) IS THE CORRESPONDING ORIGIN ON THE GAUSSMETER GRID 

	IF (XC<=XM) THEN 
		XC=XM
!IF SMALLER THAN PREVIOUS VALUE THEN STOP 
		GOTO 30 
	ELSE 
		IF (XC>XM) THEN
			T=0.001 !INITIALIZE THE ROTATION ANGLE WITH 0.001 RADIANS??
			GOTO 20
		ENDIF
	ENDIF

C DETERMINE IF THE NEW CHI-SQUARE IS SMALLER THAN THE PREVIOUS MINIMUM IF NOT KEEP LOOKING

30	WRITE (*, 40)
40 	FORMAT(7X,'X(CM)',4X,'Y(CM)',4X,'Z(CM)',5X,'BX',10X,'BY',10X,'BZ')
	WRITE(*, 50) X, Y, Z, BX, BY, BZ, B
50   	FORMAT(3F10.1,4(F12.5))
	PRINT *, 'THETA' , T
	
	STOP
	END PROGRAM

	SUBROUTINE READBDATA(UNITNUM, NUMROWS, NUMCOLS, BDATA)
	IMPLICIT NONE
	INTEGER UNITNUM, NUMCOLS
C	COMMON/INTEGER/NUMROWS
C	COMMON/ARRAY/BDATA
	PARAMETER (NUMCOLS=6, NUMROWS=26)
	REAL BDATA(NUMROWS,NUMCOLS)
C	NUMCOLS=6
C	NUMROWS=26 
C	REAL :: BDATA(NUMROWS,NUMCOLS)
		
	OPEN(UNIT=1, FILE="HELIXDATA.TXT") 
	
	DO I=1, NUMROWS
		READ(1, *),BDATA(I,1),BDATA(I,2),BDATA(I,3),BDATA(I,4),BDATA(I,5),BDATA(I,6),BDATA(I,7)  
C IS THIS THE CORRECT WAY TO ASSIGN TO AN ARRAY 
	END DO 
	CLOSE (UNIT=1)
	RETURN 
	END SUBROUTINE


	SUBROUTINE CHI_SQUARE(NUMROWS)
C	IMPLICIT NONE
C	INTEGER A,B
C	COMMON/REAL/XC
C	REAL XC 

C LOOP OVER THE DATA ARRAY AND COMPUTE THE CHI SQUARE FOR EACH ELEMENT
	
	DO A=1, NUMROWS
 
		B=1
		XO = ARRAY(A,B)
		YO = ARRAY(A,B+1)
		ZO = ARRAY(A,B+2)
		B_X = ARRAY(A,B+3)
		B_Y = ARRAY(A,B+4) 
		B_Z = ARRAY(A,B+5) 

		XO = (XO-6)*3.016 
		YO = (YO-6)*3.016 
		ZO= (ZO-34)*3.016 
C		TRANSLATE COORDINATES FROM MEASRMENT SYSTEM TO MAGNET SYSTEM
		 
		CALL ROTATE(XO,YO,ZO,T)
		X=TCOORD(1)
		Y=TCOORD(2)
		Z=TCOORD(3)
C 		ROTATE COORDINATES TO TRY AND FIND THE BEST FIT 
				
		R= SQRT(X*X+Y*Y+Z*Z) 
		CALL HEAT_MAG(X, Y, Z, BX, BY, BZ) 
		XCC = ((B_X-BX)**2/BX)+((B_Y-BY)**2/BY)
		XC = XC+XCC 
	ENDDO
	RETURN
	END SUBROUTINE 


	SUBROUTINE ROTATE(XO, YO, ZO, ARRAY, T)
	IMPLICIT NONE
	REAL :: ROTATION (3,3)
	COMMON/ARRAY/TCOORD
	REAL, DIMENSION(3):: TCOORD
	REAL :: COORD 
	DIMENSION COORD(3) 
	INTEGER I,N 
	I=1
	N=DIM(TCOORD) !CORRECT WAY TO SET DIMENSION? 

C	DEFINE AN ARRAY FOR COORDIANTE ROTATION 
C	ROTATION MATRIX EQUATION (3.35) ARFKIN 7TH ED 
	ROTATION(1,1)=COS(T)
	ROTATION(1,2)=SIN(T)
	ROTATION(1,3)=0
	ROTATION(2,1)=-SIN(T)
	ROTATION(2,2)=COS(T)
	ROTATION(2,3)=0
	ROTATION(3,1)=0
	ROTATION(3,2)=0
	ROTATION(3,3)=1 
	COORD(1,1)=XO
	COORD(2,1)=YO
	COORD(3,1)=ZO 
		
	
	DO I=1, N  !MULTIPLY THE ROTATION MATRIX BY THE VECTOR
		TCOORD=TCOORD+COORD(I)*ROTATION(*,I) 
	ENDDO
	RETURN  
	END SUBROUTINE 
